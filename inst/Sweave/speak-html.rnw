<<echo=false, results=html>>=
    SummaryTable <- function(contacts, direction, arrow) {
        cat('<table border=0>\n', file=.HTML.file)

        for(i in seq_len(nrow(contacts))) {
            cat('<tr>', file=.HTML.file)

            # Pad with empty cells to the left
            cat(paste(rep('<td>&nbsp;</td>', 2L*(contacts$distance[i]-1L)), collapse=''), file=.HTML.file)

            cat(sprintf('<td align="right">%s</td>', contacts$lhs[i]), file=.HTML.file)
            cat(sprintf('<td align="right"><a href="#%s-%s-%s">%s</a></td>', direction, contacts$lhs[i], contacts$rhs[i], arrow), file=.HTML.file)
            cat(sprintf('<td align="right">%s</td>', contacts$rhs[i]), file=.HTML.file)

            # Pad with empty cells to the right
            cat(paste(rep('<td>&nbsp;</td>', 2L*(max(contacts$distance-1L) - (contacts$distance[i]-1L))), collapse=''), file=.HTML.file)

            cat('</tr>\n', file=.HTML.file)
        }

        cat('</table>\n', file=.HTML.file)
    }
@

<<echo=false, results=html>>=
    DetailedTable <- function(contacts, direction, arrow) {
        contacts <- contacts[order(contacts$t, contacts$id, decreasing=FALSE),]

        contacts$id <- as.character(contacts$id)
        contacts$id[is.na(contacts$id)] <- '&nbsp;'

        contacts$n <- as.character(contacts$n)
        contacts$n[is.na(contacts$n)] <- '&nbsp;'

        contacts$category <- as.character(contacts$category)
        contacts$category[is.na(contacts$category)] <- '&nbsp;'

        ddply(contacts, c('lhs', 'rhs'), .fun=function(x) {
            cat('<p>', file=.HTML.file)
            cat(sprintf('<h3><a name="%s-%s-%s">%s %s %s</a></h3>', direction, x$lhs[1], x$rhs[1], x$lhs[1], arrow, x$rhs[1]), file=.HTML.file)

            cat('<table border=1>\n', file=.HTML.file)

            # Header
            if(identical(direction, 'in')) {
                cat('<tr><th>Date</th><th>Id</th><th>N</th><th>Category</th><th>Destination</th><th>&nbsp;</th><th>Source</th></tr>', file=.HTML.file)
            } else {
                cat('<tr><th>Date</th><th>Id</th><th>N</th><th>Category</th><th>Source</th><th>&nbsp;</th><th>Destination</th></tr>', file=.HTML.file)
            }

            for(i in seq_len(nrow(x))) {
                cat('<tr>', file=.HTML.file)

                cat(sprintf('<td align="right">%s</td>', x$t[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$id[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$n[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$category[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$lhs[i]), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', arrow), file=.HTML.file)
                cat(sprintf('<td align="right">%s</td>', x$rhs[i]), file=.HTML.file)

                cat('</tr>\n', file=.HTML.file)
            }

            cat('</table>\n', file=.HTML.file)
            cat('</p>', file=.HTML.file)
        })
    }
@

<html>

<head>
<title>\Sexpr{.ct_env$ct@root}</title>
</head>

<body>

<h1 align='center'>Contact Tracing</h1>
<h1 align='center'>Root: \Sexpr{.ct_env$ct@root}</h1>
<h3 align='center'>EpiContactTrace</h3>
<h3 align='center'>Version: \Sexpr{packageVersion('EpiContactTrace')}</h3>

<hr/>

<<echo=false, results=hide>>=
  filename <- sprintf('%s.png', .ct_env$ct@root)

  png(filename)
  plot(.ct_env$ct)
  dev.off()
@

<img style="text-align:center;display:block;" src="\Sexpr{filename}"/>

<hr/>

<h2>Summary ingoing contacts</h2>

<p>
<table border=0>
<tr><td>In begin date:</td><td>\Sexpr{.ct_env$ct@ingoingContacts@tBegin}</td></tr>
<tr><td>In end date:</td><td>\Sexpr{.ct_env$ct@ingoingContacts@tEnd}</td></tr>
<tr><td>In days:</td><td>\Sexpr{.ct_env$ct@ingoingContacts@tEnd - .ct_env$ct@ingoingContacts@tBegin}</td></tr>
<tr><td>In degree:</td><td>\Sexpr{InDegree(.ct_env$ct@ingoingContacts)}</td></tr>
<tr><td>Ingoing contact chain:</td><td>\Sexpr{IngoingContactChain(.ct_env$ct@ingoingContacts)}</td></tr>
</table>
</p>

<<echo=false, results=html>>=
    if(length(.ct_env$ct@ingoingContacts@source) > 0L) {
        # Get network structure. The distance is used for indentation.
        ns <- NetworkStructure(.ct_env$ct@ingoingContacts)

        # Rename source and destination to lhs and rhs, with respect to direction
        names(ns)[names(ns) == 'source'] <- 'rhs'
        names(ns)[names(ns) == 'destination'] <- 'lhs'

        SummaryTable(ns, 'in', '&larr;')
    } else {
        cat("<p>No ingoing contacts during the search period.</p>\n", file=.HTML.file)
    }
@

<hr/>

<h2>Summary outgoing contacts</h2>

<p>
<table border=0>
<tr><td>Out begin date:</td><td>\Sexpr{.ct_env$ct@outgoingContacts@tBegin}</td></tr>
<tr><td>Out end date:</td><td>\Sexpr{.ct_env$ct@outgoingContacts@tEnd}</td></tr>
<tr><td>Out days:</td><td>\Sexpr{.ct_env$ct@outgoingContacts@tEnd - .ct_env$ct@outgoingContacts@tBegin}</td></tr>
<tr><td>Out degree:</td><td>\Sexpr{OutDegree(.ct_env$ct@outgoingContacts)}</td></tr>
<tr><td>Outgoing contact chain:</td><td>\Sexpr{OutgoingContactChain(.ct_env$ct@outgoingContacts)}</td></tr>
</table>
</p>

<<echo=false, results=html>>=
    if(length(.ct_env$ct@outgoingContacts@source) > 0L) {
        # Get network structure. The distance is used for indentation.
        ns <- NetworkStructure(.ct_env$ct@outgoingContacts)

        # Rename source and destination to lhs and rhs, with respect to direction
        names(ns)[names(ns) == 'source'] <- 'lhs'
        names(ns)[names(ns) == 'destination'] <- 'rhs'

        SummaryTable(ns, 'out', '&rarr;')
    } else {
        cat("<p>No outgoing contacts during the search period.</p>\n", file=.HTML.file)
    }
@

<<echo=false, results=html>>=
    if(length(.ct_env$ct@ingoingContacts@source) > 0L) {
        cat('<hr/>', file=.HTML.file)

        cat('<h2>Direct ingoing contacts</h2>', file=.HTML.file)

        df <- as(.ct_env$ct@ingoingContacts, 'data.frame')
        names(df)[names(df) == 'source'] <- 'rhs'
        names(df)[names(df) == 'destination'] <- 'lhs'

        DetailedTable(df[df$lhs == df$root,], 'in', '&larr;')

        df <- df[df$lhs != df$root,]
        if(nrow(df) > 0) {
            cat('<hr/>', file=.HTML.file)
            cat('<h2>Indirect ingoing contacts</h2>', file=.HTML.file)

            DetailedTable(df, 'in', '&larr;')
        }
    }
@

<<echo=false, results=html>>=
    if(length(.ct_env$ct@outgoingContacts@source) > 0L) {
        cat('<hr/>', file=.HTML.file)

        cat('<h2>Direct outgoing contacts</h2>', file=.HTML.file)

        df <- as(.ct_env$ct@outgoingContacts, 'data.frame')
        names(df)[names(df) == 'source'] <- 'lhs'
        names(df)[names(df) == 'destination'] <- 'rhs'

        DetailedTable(df[df$lhs == df$root,], 'in', '&larr;')

        df <- df[df$lhs != df$root,]
        if(nrow(df) > 0) {
            cat('<hr/>', file=.HTML.file)
            cat('<h2>Indirect outgoing contacts</h2>', file=.HTML.file)

            DetailedTable(df, 'out', '&rarr;')
        }
    }
@

<hr/>

<h5>Generated \Sexpr{Sys.time()} by EpiContactTrace version \Sexpr{packageVersion('EpiContactTrace')}</h5>
</body>

</html>
